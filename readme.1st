2018.JULY.09

CONCEPTS

PLC repository contains a set of documents(guidelines) and their relative code imlementations in Siemens KOP/AWL language.
(Siemens because is the most used one, but the ideas behind can be easily traslated in any other plc language Rockwell, 
Omron, GE, Schneider etc..). 

The basic idea is to provide a Standard PLC Library (SPL) usefull in large contexts where many programmers (plc progs.
and/or scada/hmi progs.) works indipendently but would integrate lots of their systems to provide standard solutions. 
The basics of this project is to supply concepts and software that implements these ideas.

Another goal of the library is to provide a solid basis on wich project leaders can trust and this helps their job to
produce consistent applications also with several persons involved, helping for some of the aspects this causes specially 
in predicting development schedule.

The project is divided in some sections.

- First sections provides Standard Guideline for typical devices (proximity switches, analogs, motors, etc..).
  The documentation covers most of standard devices and provides standard implementations that should be used
  in a large contexts without any modifications.

- Second section provides a new concept in PLC development. The idea is to supply standard functions that controls all
  devices without knowing their specific control inputs and outputs. The typical example is to have one function that 
  is capable to control the start and stop of any type of motor indipendently if the phisical motor is single speed, 
  double speed(star/triangle), controlled by an mcc, controlled by an inverter or whatever else. 
  The side effect of this approach is that many programmers can do this job toghether, programming a complete plant 
  without knowing wich devices will be on the field. The programming of the philosophy of plant conduction is decoupled
  from what will be in field.
  In summary, at the end:
  - Scada programmers don't need to know devices to produce their job.
  - More than one programmer can work at the same project without knowing field devices and implementing standard
    code based on standard device functions.
  - One programmer per device can implement phisical control of I/O. (one per device used).
  
- Third section will provide standard implementation for "tricky" algorithm like fuzzy logic or neural networks 
  that works fine to control complex processes. The idea is to provide also an open PID control that's supply
  consistent and predictable (because anybody can read in it) responses.  


Giovanni Maffioletti
